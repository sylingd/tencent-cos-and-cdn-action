name: main

on:
  push:
    branches:
      - test

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Fetch Token
        id: fetch-token
        run: |
          JSON_RESPONSE=$(curl -X GET -s -H "Authorization: Bearer $TOKEN" --globoff "https://api.sylingd.com/tencent-cloud/GetFederationToken?region=ap-beijing&name=github-bot&policy=%7B%22version%22%3A%222.0%22%2C%22statement%22%3A%5B%7B%22effect%22%3A%22allow%22%2C%22action%22%3A%5B%22cos%3APutObject%22%2C%22cos%3ADeleteObject%22%2C%22cos%3AGetBucket%22%5D%2C%22resource%22%3A%5B%22qcs%3A%3Acos%3Aap-chengdu%3Auid%2F1251717201%3Adeploy-1251717201%2F*%22%5D%7D%2C%7B%22effect%22%3A%22allow%22%2C%22action%22%3A%5B%22cdn%3APurgePathCache%22%2C%22cdn%3APurgeUrlsCache%22%5D%2C%22resource%22%3A%5B%22*%22%5D%7D%5D%7D&duration=1800")
          TMP_SECRET_ID=$(echo $JSON_RESPONSE | jq .Credentials.TmpSecretId | xargs echo)
          TMP_SECRET_KEY=$(echo $JSON_RESPONSE | jq .Credentials.TmpSecretKey | xargs echo)
          TMP_TOKEN=$(echo $JSON_RESPONSE | jq .Credentials.Token | xargs echo)
          echo "TMP_SECRET_ID=$TMP_SECRET_ID" >> $GITHUB_OUTPUT
          echo "TMP_SECRET_KEY=$TMP_SECRET_KEY" >> $GITHUB_OUTPUT
          echo "TMP_TOKEN=$TMP_TOKEN" >> $GITHUB_OUTPUT
        env:
          TOKEN: ${{ secrets.TENCENT_CLOUD_TOKEN }}
      - name: Test Action
        uses: sylingd/tencent-cos-and-cdn-action@dev
        with:
          secret_id: $TMP_SECRET_ID
          secret_key: $TMP_SECRET_KEY
          session_token: $TMP_TOKEN
          cos_bucket: deploy-1251717201
          cos_region: ap-chengdu
          cos_accelerate: false
          cos_put_options: '{"CacheControl":"max-age=43220"}'
          cdn_type: cdn
          cdn_prefix: https://cdn.sylibs.com/demo/
          local_path: $GITHUB_WORKSPACE/upload_folder
          remote_path: /demo/actions/cdn
          clean: false
        env:
          TMP_SECRET_ID: ${{ steps.fetch-token.outputs.TMP_SECRET_ID }}
          TMP_SECRET_KEY: ${{ steps.fetch-token.outputs.TMP_SECRET_KEY }}
          TMP_TOKEN: ${{ steps.fetch-token.outputs.TMP_TOKEN }}
